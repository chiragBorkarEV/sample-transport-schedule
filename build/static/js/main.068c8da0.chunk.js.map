{"version":3,"sources":["components/serviceDetails/styles.js","components/serviceDetails/index.js","constants.js","components/Content/styles.js","components/Content/cycleContent.js","components/Content/index.js","App.js","reportWebVitals.js","index.js"],"names":["styles","makeStyles","theme","serviceName","fontSize","margin","cursor","textDecoration","disruptionIcon","ServiceDetails","props","data","showContent","setShowCycleHireContent","classes","useStyles","isDisruptive","lineStatuses","disruptive","length","some","lineStatus","statusSeverity","isNightService","serviceTypes","nightService","serviceType","name","Grid","container","map","service","index","item","xs","md","className","onClick","modeName","htmlColor","padding","height","background","header","fontWeight","reason","marginBottom","resultContainer","result","textField","width","CycleContent","useState","userInput","setUserInput","searchResult","setSearchResult","searchHistory","setSearchHistory","fetchContent","searchTerm","filter","value","axios","get","then","response","push","saveSearchResults","catch","error","console","log","TextField","id","label","variant","onChange","event","target","split","commonName","lat","lon","Content","showCycleHireContent","App","serviceDetails","setServiceDetails","content","setContent","createMuiTheme","useEffect","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RAiBeA,EAdAC,aAAW,SAACC,GAAD,MAAY,CACpCC,YAAa,CACXC,SAAU,GACVC,OAAQ,SACRC,OAAQ,UACR,UAAW,CACTC,eAAgB,cAGpBC,eAAgB,CACdH,OAAQ,oB,OCiDGI,EAtDQ,SAACC,GAAW,IACvBC,EAA+CD,EAA/CC,KAAMC,EAAyCF,EAAzCE,YAAaC,EAA4BH,EAA5BG,wBACrBC,EAAUC,IAEVC,EAAe,SAACC,GAClB,IAAIC,GAAa,EAIjB,OAHMD,GAAgBA,EAAaE,OAAS,IACxCD,EAAaD,EAAaG,MAAK,SAACC,GAAD,OAA8C,KAA9BA,EAAWC,mBAEvDJ,GAGLK,EAAiB,SAACC,GACpB,IAAIC,GAAe,EAInB,OAHMD,GAAgBA,EAAaL,OAAS,IACxCM,EAAeD,EAAaJ,MAAK,SAACM,GAAD,MAAsC,UAArBA,EAAYC,SAE3DF,GAWX,OACI,eAACG,EAAA,EAAD,CAAMC,WAAS,EAAf,YACOlB,GAAQA,EAAKQ,OAAS,GAAKR,EAAKmB,KAAI,SAACC,EAASC,GAAV,OACnC,cAACJ,EAAA,EAAD,CAAmCK,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,UAAWtB,EAAQX,YAAakC,QAAS,kBAAMzB,EAAY,CAC9GI,aAAcA,EAAae,EAAQd,cACnCA,aAAcc,EAAQd,gBAF1B,UAXKqB,EAeQP,EAAQO,SAfNX,EAegBI,EAAQJ,KAflBH,EAewBO,EAAQP,aAflBP,EAegCc,EAAQd,aAdnF,+CACQqB,EADR,YACoBX,GACfX,EAAaC,IAAiB,cAAC,IAAD,CAAgBsB,UAAU,OAAOH,UAAWtB,EAAQN,iBAClFe,EAAeC,IAAiB,cAAC,IAAD,CAAgBe,UAAU,OAAOH,UAAWtB,EAAQN,sBAOjF,sBAA0BwB,IAXtB,IAACM,EAAUX,EAAMH,EAAcP,OAmBpCN,GAAQ,cAACiB,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,UAAWtB,EAAQX,YAAakC,QAAS,kBAAMxB,GAAwB,IAAjG,SC3CG,mBC6BXb,EA9BAC,aAAW,SAACC,GAAD,MAAY,CAClC2B,UAAW,CACPxB,OAAQ,SACRmC,QAAS,GACTC,OAAQ,OACRC,WAAY,QAEhBC,OAAQ,CACJvC,SAAU,GACVwC,WAAY,OACZvC,OAAQ,UAEZwC,OAAQ,CACJzC,SAAU,GACV0C,aAAc,IAElBC,gBAAiB,CACbN,OAAQ,IACRC,WAAY,OACZrC,OAAQ,SACRmC,QAAS,IAEbQ,OAAQ,CACJF,aAAc,IAElBG,UAAW,CACPC,MAAO,S,iBCwCAC,EA9DM,SAACzC,GAAW,IACrBI,EAAYJ,EAAZI,QADoB,EAEMsC,mBAAS,MAFf,mBAErBC,EAFqB,KAEVC,EAFU,OAGYF,mBAAS,MAHrB,mBAGrBG,EAHqB,KAGPC,EAHO,OAIcJ,mBAAS,IAJvB,mBAIrBK,EAJqB,KAINC,EAJM,KAYtBC,EAAe,SAACC,GAElB,GADAN,EAAaM,GACPA,EAAY,CACd,IAAML,EAAeE,EAAcI,QAAO,SAAC5B,GAAD,OAAUA,EAAKN,OAASiC,KAC5DL,GAAgBA,EAAapC,OAAS,EACxCqC,EAAgBD,EAAa,GAAGO,OAEhCC,IAAMC,IAAN,UFzBsB,0CEyBtB,kBAA6CJ,IACxCK,MAAK,SAAUC,GACZV,EAAgBU,EAASvD,MAfnB,SAACiD,EAAYjD,GACnC,IAAIqC,EAAM,YAAOS,GACjBT,EAAOmB,KAAK,CAAExC,KAAMiC,EAAYE,MAAOnD,IACvC+C,EAAiBV,GAaDoB,CAAkBR,EAAYM,EAASvD,SAE1C0D,OAAM,SAAUC,GACbC,QAAQC,IAAIF,WAIxBd,EAAgB,OAIxB,OACI,eAAC5B,EAAA,EAAD,CAAMC,WAAS,EAACO,UAAWtB,EAAQe,UAAnC,UACI,cAACD,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAf,SACI,cAACN,EAAA,EAAD,CAAMC,WAAS,EAACO,UAAWtB,EAAQiC,gBAAnC,SACI,cAACnB,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,EAAf,SACI,cAACuC,EAAA,EAAD,CACIC,GAAG,iBACHC,MAAM,kBACNC,QAAQ,WACRxC,UAAWtB,EAAQmC,UACnB4B,SAAU,SAACC,GAAD,OAAWnB,EAAamB,EAAMC,OAAOjB,kBAI5DP,GAAgBA,EAAapC,OAAS,GAAKoC,EAAazB,KAAI,SAACG,EAAMD,GAAP,OAC3D,cAACJ,EAAA,EAAD,CAA8BK,MAAI,EAACC,GAAI,GAAIE,UAAWtB,EAAQkC,OAA9D,mBACQhB,EAAQ,EADhB,aACsBC,EAAKyC,GAAGM,MAAM,KAAK,GADzC,YAC+C/C,EAAKgD,WADpD,aACmEhD,EAAKiD,IADxE,aACgFjD,EAAKkD,IADrF,uBAAqBnD,SAItBuB,GAAwC,IAAxBA,EAAapC,QAAgB,cAACS,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAIE,UAAWtB,EAAQkC,OAAtC,mBFtDzB,2BEsDyB,aAA0EK,EAA1E,WCxB7C+B,EA5BC,SAAC1E,GAAW,IAChBC,EAA+BD,EAA/BC,KAAM0E,EAAyB3E,EAAzB2E,qBADS,EAEgB1E,GAAQ,GAAvCK,EAFe,EAEfA,aAAcC,EAFC,EAEDA,aAChBH,EAAUC,IAEhB,OACI,mCACKsE,EACG,cAAC,EAAD,CAAcvE,QAASA,IACvB,eAACc,EAAA,EAAD,CAAMC,WAAS,EAACO,UAAWtB,EAAQe,UAAnC,UACI,cAACD,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAIE,UAAWtB,EAAQ6B,OAAtC,SACK3B,EHfS,0CADG,2BGkBhBA,GAAgBC,EAAaa,KAAI,SAACT,EAAYW,GAAb,OAC9B,cAACJ,EAAA,EAAD,CAAkCK,MAAI,EAACC,GAAI,GAAIE,UAAWtB,EAAQ+B,OAAlE,SACmC,KAA9BxB,EAAWC,eAAwBD,EAAWwB,OAAS,IAD5D,qBAAyBb,aCuBlCsD,EAjCH,WAAO,IAAD,EAC4BlC,qBAD5B,mBACTmC,EADS,KACOC,EADP,OAEcpC,mBAAS,MAFvB,mBAETqC,EAFS,KAEAC,EAFA,OAGwCtC,oBAAS,GAHjD,mBAGTiC,EAHS,KAGaxE,EAHb,KAUVX,EAAQyF,YAAe,IAY7B,OAVAC,qBAAU,WACR7B,IAAMC,IJxByB,2EIyB5BC,MAAK,SAAUC,GACdsB,EAAkBtB,EAASvD,SAE5B0D,OAAM,SAAUC,GACfC,QAAQC,IAAIF,QAEf,IAGD,cAACuB,EAAA,EAAD,CAAe3F,MAAOA,EAAtB,SACE,eAAC0B,EAAA,EAAD,CAAMC,WAAS,EAACO,UAAU,MAA1B,UACE,cAAC,EAAD,CAAgBzB,KAAM4E,EAAgB3E,YApBxB,SAACD,GACnBE,GAAwB,GACxB6E,EAAW/E,IAkByDE,wBAAyBA,KACvFwE,KAA0BI,IAAY,cAAC,EAAD,CAAS9E,KAAM8E,EAASJ,qBAAsBA,UCzB/ES,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB/B,MAAK,YAAkD,IAA/CgC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.068c8da0.chunk.js","sourcesContent":["\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst styles = makeStyles((theme) => ({\n  serviceName: {\n    fontSize: 16,\n    margin: '12px 0',\n    cursor: 'pointer',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  },\n  disruptionIcon: {\n    margin: '6px 0 0 12px'\n  }\n}));\n\nexport default styles;","import { Grid } from '@material-ui/core';\nimport WatchLaterIcon from '@material-ui/icons/WatchLater';\nimport NightsStayIcon from '@material-ui/icons/NightsStay';\nimport PropTypes from 'prop-types';\n\nimport useStyles from './styles';\nimport { CYCLE_HIRE } from '../../constants';\n\nconst ServiceDetails = (props) => {\n    const { data, showContent, setShowCycleHireContent } = props;\n    const classes = useStyles();\n\n    const isDisruptive = (lineStatuses) => {\n        let disruptive = false;\n        if (!!lineStatuses && lineStatuses.length > 0) {\n            disruptive = lineStatuses.some((lineStatus) => lineStatus.statusSeverity !== 10);\n        }\n        return disruptive;\n    }\n\n    const isNightService = (serviceTypes) => {\n        let nightService = false;\n        if (!!serviceTypes && serviceTypes.length > 0) {\n            nightService = serviceTypes.some((serviceType) => serviceType.name === 'Night');\n        }\n        return nightService;\n    }\n\n    const getInfo = (modeName, name, serviceTypes, lineStatuses) => (\n        <>\n            {`${modeName} ${name}`}\n            {isDisruptive(lineStatuses) && <WatchLaterIcon htmlColor='#000' className={classes.disruptionIcon} />}\n            {isNightService(serviceTypes) && <NightsStayIcon htmlColor='#000' className={classes.disruptionIcon} />}\n        </>\n    )\n\n    return (\n        <Grid container>\n            {!!data && data.length > 0 && data.map((service, index) => (\n                <Grid key={`serviceName-${index}`} item xs={12} md={6} className={classes.serviceName} onClick={() => showContent({\n                    isDisruptive: isDisruptive(service.lineStatuses),\n                    lineStatuses: service.lineStatuses\n                })}>\n                    {getInfo(service.modeName, service.name, service.serviceTypes, service.lineStatuses)}\n                </Grid>\n            ))}\n            {/* Added unwanted conditional based rendering to avoid displaying Cycle Hire option before fetching data, just for better UX */}\n            {!!data && <Grid item xs={12} md={6} className={classes.serviceName} onClick={() => setShowCycleHireContent(true)}>\n                {CYCLE_HIRE}\n            </Grid>}\n\n        </Grid>\n\n    )\n}\n\nServiceDetails.propTypes = {\n    data: PropTypes.array,\n    showContent: PropTypes.func,\n    setShowCycleHireContent: PropTypes.func\n}\n\nexport default ServiceDetails;","export const SERVICE_DETAILS_API = 'https://api.tfl.gov.uk/Line/Mode/tube,overground,dlr/Status?detail=true';\nexport const SEARCH_BIKE_POINTS_API = 'https://api.tfl.gov.uk/BikePoint/Search';\nexport const NO_DISRUPTION_HEADING = 'No service disruptions';\nexport const DISRUPTION_HEADING = 'Service currently suffering disruptions';\nexport const CYCLE_HIRE = 'Cycle Hire';\nexport const EMPTY_SEARCH_RESULT = 'No bike points found for';","\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst styles = makeStyles((theme) => ({\n    container: {\n        margin: '36px 0',\n        padding: 12,\n        height: 'auto',\n        background: '#ccc'\n    },\n    header: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        margin: '18px 0'\n    },\n    reason: {\n        fontSize: 16,\n        marginBottom: 18\n    },\n    resultContainer: {\n        height: 100,\n        background: '#FFF',\n        margin: '12px 0',\n        padding: 24\n    },\n    result: {\n        marginBottom: 18\n    },\n    textField: {\n        width: 320\n    }\n}));\n\nexport default styles;","import { Grid, TextField } from '@material-ui/core';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\n\nimport { EMPTY_SEARCH_RESULT, SEARCH_BIKE_POINTS_API } from '../../constants';\n\nconst CycleContent = (props) => {\n    const { classes } = props;\n    const [userInput, setUserInput] = useState(null);\n    const [searchResult, setSearchResult] = useState(null);\n    const [searchHistory, setSearchHistory] = useState([]);\n\n    const saveSearchResults = (searchTerm, data) => {\n        let result = [...searchHistory];\n        result.push({ name: searchTerm, value: data });\n        setSearchHistory(result);\n    }\n\n    const fetchContent = (searchTerm) => {\n        setUserInput(searchTerm);\n        if (!!searchTerm) {\n            const searchResult = searchHistory.filter((item) => item.name === searchTerm);\n            if (!!searchResult && searchResult.length > 0) {\n                setSearchResult(searchResult[0].value);\n            } else {\n                axios.get(`${SEARCH_BIKE_POINTS_API}?query=${searchTerm}`)\n                    .then(function (response) {\n                        setSearchResult(response.data);\n                        saveSearchResults(searchTerm, response.data);\n                    })\n                    .catch(function (error) {\n                        console.log(error);\n                    });\n            }\n        } else {\n            setSearchResult(null);\n        }\n    }\n\n    return (\n        <Grid container className={classes.container}>\n            <Grid item xs={12}>\n                <Grid container className={classes.resultContainer}>\n                    <Grid item xs={6}>\n                        <TextField\n                            id=\"outlined-basic\"\n                            label=\"Search For Bike\"\n                            variant=\"outlined\"\n                            className={classes.textField}\n                            onChange={(event) => fetchContent(event.target.value)} />\n                    </Grid>\n                </Grid>\n            </Grid>\n            {!!searchResult && searchResult.length > 0 && searchResult.map((item, index) => (\n                <Grid key={`result-${index}`} item xs={12} className={classes.result}>\n                    {`${index + 1}. ${item.id.split('_')[1]} ${item.commonName} (${item.lat}, ${item.lon})`}\n                </Grid>\n            ))}\n            {!!searchResult && searchResult.length === 0 && <Grid item xs={12} className={classes.result}>{`${EMPTY_SEARCH_RESULT} '${userInput}'`}</Grid>}\n\n        </Grid>\n    )\n}\n\nCycleContent.propTypes = {\n    classes: PropTypes.object\n}\n\nexport default CycleContent;","import { Grid } from '@material-ui/core';\nimport PropTypes from 'prop-types';\n\nimport useStyles from './styles';\nimport { NO_DISRUPTION_HEADING, DISRUPTION_HEADING } from '../../constants';\nimport CycleContent from './cycleContent';\n\nconst Content = (props) => {\n    const { data, showCycleHireContent } = props;\n    const { isDisruptive, lineStatuses } = data || {};\n    const classes = useStyles();\n\n    return (\n        <>\n            {showCycleHireContent ?\n                <CycleContent classes={classes} /> :\n                <Grid container className={classes.container}>\n                    <Grid item xs={12} className={classes.header}>\n                        {isDisruptive ? DISRUPTION_HEADING : NO_DISRUPTION_HEADING}\n                    </Grid>\n                    {isDisruptive && lineStatuses.map((lineStatus, index) => (\n                        <Grid key={`disruption-${index}`} item xs={12} className={classes.reason}>\n                            {lineStatus.statusSeverity !== 10 ? lineStatus.reason : ''}\n                        </Grid>\n                    ))}</Grid>\n            }\n        </>\n    )\n}\n\nContent.propTypes = {\n    data: PropTypes.object,\n    showCycleHireContent: PropTypes.bool\n}\n\nexport default Content;","import { useState, useEffect } from 'react';\nimport { Grid } from '@material-ui/core';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport axios from 'axios';\n\nimport ServiceDetails from './components/serviceDetails';\nimport Content from './components/Content';\nimport {\n  SERVICE_DETAILS_API\n} from './constants';\n\nconst App = () => {\n  const [serviceDetails, setServiceDetails] = useState();\n  const [content, setContent] = useState(null);\n  const [showCycleHireContent, setShowCycleHireContent] = useState(false);\n\n  const showContent = (data) => {\n    setShowCycleHireContent(false);\n    setContent(data);\n  }\n\n  const theme = createMuiTheme({}); //Added to avoid theme warning as this is not heavy on customize styling but theme is mandatory prop for ThemeProvider\n\n  useEffect(() => {\n    axios.get(SERVICE_DETAILS_API)\n      .then(function (response) {\n        setServiceDetails(response.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, []);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Grid container className=\"App\">\n        <ServiceDetails data={serviceDetails} showContent={showContent} setShowCycleHireContent={setShowCycleHireContent} />\n        {(showCycleHireContent || !!content) && <Content data={content} showCycleHireContent={showCycleHireContent} />}\n      </Grid>\n    </ThemeProvider>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}